/*ELMÉLET / 1. (5P)
• Mi a különbség az Exception és a RuntimeException között?
• Hogyan kell őket használni?
• Mire érdemes figyelni a kezelésüknél*/






/*ELMÉLET / 2. (5P)

• Hogyan tudunk egy kollekcióból bejárás közben elemeket törölni?
• Mutasd be egy vázlatosan (kóddal) az elemek törlésének a módját*/



/*ELMÉLET / 3. (5P)
• Ismertesd röviden az OOP koncepciókat a Java-ban*/
/*
absztrakció
● egyszerű dolgok összetettebb működést reprezentálnak

encapsulation
● csak az fér hozzá egy adott dologhoz, aki (ami) azt birtokolja: getterek: hozzaferes, setterek: ertekek megadas

öröklődés (inheritance)
 egy osztály egy másiktól örököl

polymorphism
egy metódus ugyanazon a néven más osztályban mást csinál
Ezt el lehet erni a következö modon
@overloading
a metódusoknak más típusú és/vagy más darabszámú bemeneti
paraméterük van

@overriding
öröklődés esetén használható
a Gyerek osztály felülírja a Szülő osztály metódusát*/







/*ELMÉLET / 4. (5P)
• Milyen adatszerkezet segítségével lehetne a gyakorlati feladatok alatt
beolvasott meccsek adatait mindig dátum szerint rendezett sorrendben
tárolni?

• Mit kellene a meccsek adatait tároló osztálynál változtatni, hogy képes
legyen az adatszerkezettel együttműködni*/